@{
    ViewBag.Title =Resources.Contents.MyContents;
    Layout = "~/Views/Shared/_MyDashboard.cshtml";
    var lists = AppModel.Get().Webs["home"].Lists;
    var webs = AppModel.Get().User.Webs;
    var currentUser = AppModel.Get().User;
}
<ul data-role="listview" data-display="mobile-list" data-inset="true">
    <li data-role="divider">@Resources.Contents.Global</li>
    @foreach (var list in lists)
    {
        var c = list.GetItems(i => i.Owner.Equals(User.Identity.Name, StringComparison.OrdinalIgnoreCase)).Count();
        var viewUrl = Url.Content(list.DefaultUrl);
        var canView = list.DefaultView != null && (list.DefaultView.AllowAnonymous || list.IsOwner(User.Identity.Name) || currentUser.IsInRoles(list.DefaultView.Roles));
        var canNew = list.NewForm != null && (list.NewForm.AllowAnonymous || list.IsOwner(User.Identity.Name) || currentUser.IsInRoles(list.NewForm.Roles));
        if (!canView && !canNew)
        {
            continue;
        }

        if (canView)
        {
            viewUrl = viewUrl + (viewUrl.Contains("&") ? "&" : "?") + "filter=owner~eq~'" + User.Identity.Name + "'";
        }
        else
        {
            viewUrl = "javascript:void(0);";
        }
        <li data-counter="@c" @if (viewUrl.Equals("javascript:void(0);"))
                              {<text>data-link-icon="no"</text>}>
            <a href="@viewUrl">
                <h4>@list.Title</h4>
                @if (!string.IsNullOrEmpty(list.Description))
                {
                    <p>@list.Description</p>
                }

                <p>
                    @if (list.IsModerated && list.IsModerator(currentUser.UserName))
                    { 
                        <a data-icon-left="d-icon-stethoscope" role="link">@Resources.Contents.PendingReview (@list.Pendings)</a>
                    }
                    <a data-icon-left="d-icon-clock" role="link">@Resources.Contents.Unpublish (@list.Items.Count(i => !i.IsPublished && i.Owner == currentUser.UserName))</a>
                </p>

            </a>
            @if (canNew)
            {
                <a data-icon="d-icon-add-to-list" href="@Url.Content(list.GetNewItemUrl())?returnUrl=@Request.Path"></a>
            }
        </li>
    }
    @foreach (var web in webs)
    {
        var myLists = web.Lists;
        if (web.Name.Equals("home", StringComparison.OrdinalIgnoreCase))
        {
            continue;
        }
        <li data-role="divider">@web.Title</li>    
        foreach (var list in myLists)
        {
            var c = list.GetItems(i => i.Owner.Equals(User.Identity.Name, StringComparison.OrdinalIgnoreCase)).Count();
        <li data-counter="@c">
            <a href="@Url.Content(list.DefaultUrl)?filter=owner~eq~'@User.Identity.Name'">
                <h4>@list.Title</h4>
                <p>@list.Description</p>
            </a>
            <a data-icon="d-icon-add-to-list" href="@Url.Content(list.GetNewItemUrl())?returnUrl=@Request.Path"></a>
        </li>
        }
    }
</ul>

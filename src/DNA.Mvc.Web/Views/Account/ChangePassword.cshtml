@model ChangePasswordModel
@{
    var pwdLength = AppModel.Settings.PasswordLength;
}
@using (Ajax.BeginForm("ChangePassword", "Account",
    new AjaxOptions()
    {
        HttpMethod = "POST",
        OnSuccess = "if ($('.input-validation-error').length==0) { $('#changepwdForm').closest('.d-dialog-content').taoDialog('close'); } else {$('#changepwdForm').replaceWith(data);}"
    },
    new { id = "changepwdForm", @class = "d-form" }))
{
    <div class="d-field"><div>
        @Html.LabelFor(m => m.OldPassword, Resources.Security.OldPwd)</div><div>
        @Html.PasswordFor(m => m.OldPassword, new
   {
       data_val = "true",
       data_val_required = string.Format(Resources.Validations.Required_Format, Resources.Security.OldPwd),
       data_speech = "false",
       style="width:100%",
       data_val_length = string.Format(Resources.Validations.PwdLen_Format, pwdLength),
       data_val_length_max = 16,
       data_val_length_min = pwdLength,
       maxlength = 16,
       placeholder = string.Format(Resources.InputHolders.Format, Resources.Security.OldPwd)
   })</div>
        <div style="padding-top: 5px;">@Html.ValidationMessageFor(m => m.OldPassword)</div>
    </div>
    <div class="d-field"><div>
        @Html.LabelFor(m => m.NewPassword, Resources.Security.NewPwd)</div><div>
        @Html.PasswordFor(m => m.NewPassword, new
   {
       data_val = "true",
       data_val_required = string.Format(Resources.Validations.Required_Format, Resources.Security.NewPwd),
       data_speech = "false",
       style="width:100%",
       data_val_length = string.Format(Resources.Validations.PwdLen_Format, pwdLength),
       data_val_length_max = 16,
       data_val_length_min = pwdLength,
       maxlength = 16,
       placeholder = string.Format(Resources.InputHolders.Format, Resources.Security.NewPwd)
   })</div>
        <div style="padding-top: 5px;">@Html.ValidationMessageFor(m => m.NewPassword)</div>
    </div>
    <div class="d-field"><div>
        @Html.LabelFor(m => m.ConfirmPassword, Resources.Security.ConfirmPwd)</div>
        <div>@Html.PasswordFor(m => m.ConfirmPassword, new
   {
       data_val = "true",
       data_val_required = string.Format(Resources.Validations.Required_Format, Resources.Security.ConfirmPwd),
       data_speech = "false",
       style="width:100%",
       maxlength = 16,
       placeholder = string.Format(Resources.InputHolders.Format, Resources.Security.ConfirmPwd),
       data_val_length = string.Format(Resources.Validations.PwdLen_Format, pwdLength),
       data_val_length_max = 16,
       data_val_length_min = pwdLength,
       data_val_equalto = Resources.Validations.Password_Equal,
       data_val_equalto_other = "NewPassword"
   })</div>
        <div style="padding-top: 5px;">@Html.ValidationMessageFor(m => m.ConfirmPassword)</div>
    </div>
    <div style="padding: 10px;">
        <button data-inline="false" data-default="true">@Resources.Commons.Submit</button>
        <a data-inline="false" data-role="button" data-rel="close">@Resources.Commons.Close</a>
    </div>
}

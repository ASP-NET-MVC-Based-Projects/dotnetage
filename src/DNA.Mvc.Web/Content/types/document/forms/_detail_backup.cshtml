@model ContentDataItemDecorator
@{
    var list = Model.Parent;
    var fields = list.Fields;
    var defaultField = list.GetDefaultTitleField();
    var form = list.DetailForm;
    var urlformat = "~/api/" + AppModel.Get().CurrentWeb.Name + "/contents/items?name={0}&slug={1}&parentId=";
    var popupUrl = Url.Content(string.Format(urlformat, list.Name, list.Views.Default.Name));
    var defaultView = list.Views.Default;
    var prefix = list.Name + "_" + defaultView.Name;
    var tmplName = prefix + "_tmpl";
}
<div class="d-hbox d-reader">
    <div class="d-sizable-pane left" id="@(list.Name)_catalog">
        @Contents.Tree(defaultView.Items("parentId='00000000-0000-0000-0000-000000000000'"), Model.Path, new
       {
           data_source = string.Format("_list_{0}_datasrc", Model.ParentID.ToString()),
           data_popup_attr = "popupurl",
           data_autobind = "false",
           data_tmpl = tmplName,
           id = list.Name + "_tree",
           data_drag_drop = (Request.IsAuthenticated && list.Owner.Equals(User.Identity.Name)).ToString().ToLower(),
           data_dropped = "_moveNode(ui);",
           style = "width:200px;overflow:auto;min-height:720px;margin:0px;"
       })
        <div data-role="datasource" id="@(string.Format("_list_{0}_datasrc", Model.ParentID.ToString()))">
            <div data-action="read" data-url="@Url.Content("~/api/"+AppModel.Get().CurrentWeb.Name+"/contents/items?name=" + list.Name + "&slug=" + list.Views.Default.Name+"&sort=pos~desc")"></div>
            <div data-role="mapper" 
        data-convert="var target=[];  
        $.each(data, function (i, dat) { 
        var o=dat.object;
        o.popupUrl='@popupUrl'+dat.id; 
        o.parentId=dat.parentId; 
        o.id=dat.id; 
        o.links=dat.links; 
        target.push(o); 
        }); return target;">
            </div>
        </div>
        <script type="text/x-jquery-tmpl" id="@tmplName">
            <a href="${url}">${@(list.GetDefaultTitleField().Name)}</a>
        </script>
        <div class="d-size-helper" onclick="switch_pane();"></div>
    </div>
    <div class="d-box1 d-tran right" style="padding-left: 20px;">
        <p>
            @DispForms.Crumb(Model)
        </p>
        @DispForms.Caption(Model, Url)
        @{ 
            Html.RenderFields(form, Model);
        
            @DispForms.Attachments(Model)
            @DispForms.Tags(Model)
            if (Model.IsPublished && Model.IsCurrentVersion)
            {
                if (Model.IsCurrentVersion)
                {
            @DispForms.Comments(Model, Url)
                }
            }
            if (list.EnableVersioning)
            {
                if (Model.Versions().Count() > 1)
                {
            <h3>@Resources.Common.VersionHistory</h3>
            @DispForms.VersionControl(Model, Url)
                }
            }
            <p>
                @DispForms.Votes(Model, Url)
                <span class="d-inline">@Resources.Dict.Reads:</span><span class="d-inline">@Model.Reads</span>
            </p>
        }
        <div class="d-size-helper" onclick="switch_pane();"></div>
    </div>
</div>
<script type="text/javascript">
    $(function () {
        $("#@(list.Name)_catalog").resizable({
            handles: "e",
            alsoResize: "#@(list.Name)_tree",
            minWidth: 120,
            maxWidth: 500,
            stop: function (event,ui) {
                if (window.localStorage) {
                    window.localStorage.setItem("reader_@(list.ID)_width",ui.size.width);
                }
            }
        });

        if (window.localStorage) {
            if (window.localStorage["reader_@(list.ID)"] != undefined && window.localStorage["reader_@(list.ID)"]=="true")
                $(".d-reader").addClass("d-state-collapsed");

            if (window.localStorage["reader_@(list.ID)_width"] != undefined) {
                var orgWidth = parseInt(window.localStorage["reader_@(list.ID)_width"]);
                $("#@(list.Name)_catalog").width(orgWidth);
                $("#@(list.Name)_tree").width(orgWidth);
            }
        }
    });

@if (Request.IsAuthenticated && list.Owner.Equals(User.Identity.Name))
{<text>
    function _moveNode(ui) {
        var srcID = ui.node.data("id"),
            parentID = ui.targetNode.data("id");

        $.post("@(Url.Content("~/api/"+AppModel.Get().CurrentWeb.Name+"/contents/move"))", {
            name: "@(Model.Parent.Name)",
            parentID: parentID,
            id: srcID,
            pos: ui.position
        }, function () {
            ui.node.data("parentid", parentID);
        });
    }
</text>}

    function switch_pane() {
        $(".d-reader").toggleClass("d-state-collapsed");
        if (window.localStorage) {
            window.localStorage.setItem("reader_@(list.ID)", $(".d-reader").hasClass("d-state-collapsed"));
        }
    }
</script>
